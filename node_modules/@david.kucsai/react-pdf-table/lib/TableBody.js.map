{"version":3,"file":"TableBody.js","sourceRoot":"","sources":["../src/TableBody.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAmD;AACnD,6BAA+B;AAC/B,iCAAiD;AAmBjD;IAA+B,6BAAmC;IAAlE;;IAuBA,CAAC;IAtBG,0BAAM,GAAN;QAAA,iBAqBC;;QApBG,IAAM,QAAQ,GAAsB,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC1E,IAAA,KAA+D,IAAA,gCAAwB,EAAC,IAAI,CAAC,KAAK,CAAC,EAAlG,iBAAiB,uBAAA,EAAE,mBAAmB,yBAAA,EAAE,kBAAkB,wBAAwC,CAAC;QAC1G,IAAM,QAAQ,GAAG,MAAA,IAAI,CAAC,KAAK,CAAC,IAAI,mCAAI,EAAE,CAAC;QAEvC,OAAO,CACH,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,QAAQ;;YAAK,OAAA,CAC/B,oBAAC,mBAAQ,eACD,KAAI,CAAC,KAAK,IACd,GAAG,EAAE,QAAQ,EACb,IAAI,EAAE,QAAQ,GAAG,CAAC,KAAK,CAAC,EACxB,IAAI,EAAE,IAAI,EACV,iBAAiB,EAAE,iBAAiB,EACpC,mBAAmB,EAAE,mBAAmB,EACxC,kBAAkB,EAAE,kBAAkB,EACtC,gBAAgB,EAAE,MAAA,KAAI,CAAC,KAAK,CAAC,eAAe,mCAAI,KAAK,KAEpD,QAAQ,CACF,CACd,CAAA;SAAA,CAAC,CACL,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CAAC,AAvBD,CAA+B,KAAK,CAAC,aAAa,GAuBjD;AAvBY,8BAAS","sourcesContent":["import {TableRow, TableRowProps} from \"./TableRow\";\nimport * as React from \"react\";\nimport {getDefaultBorderIncludes} from \"./Utils\";\nimport {ZebraProps} from \"./Table\";\n\nexport interface TableBodyProps extends TableRowProps, Pick<ZebraProps, \"zebra\"> {\n    /**\n     * The data associated with the table.\n     */\n    data?: any[];\n\n    /**\n     * Allows control of the very top border of the TableBody to be toggled on and off\n     * if there is no header.\n     */\n    renderTopBorder?: boolean\n}\n\n/**\n * This component displays the data as {@see TableRow}s.\n */\nexport class TableBody extends React.PureComponent<TableBodyProps> {\n    render() {\n        const rowCells: React.ReactNode[] = React.Children.toArray(this.props.children);\n        const {includeLeftBorder, includeBottomBorder, includeRightBorder} = getDefaultBorderIncludes(this.props);\n        const dataRows = this.props.data ?? [];\n\n        return (\n            (dataRows).map((data, rowIndex) => (\n                <TableRow\n                    {...this.props}\n                    key={rowIndex}\n                    even={rowIndex % 2 === 0}\n                    data={data}\n                    includeLeftBorder={includeLeftBorder}\n                    includeBottomBorder={includeBottomBorder}\n                    includeRightBorder={includeRightBorder}\n                    includeTopBorder={this.props.renderTopBorder ?? false}\n                >\n                    {rowCells}\n                </TableRow>\n            ))\n        );\n    }\n}\n"]}