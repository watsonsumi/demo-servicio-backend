{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../src/Utils.ts"],"names":[],"mappings":";;;AAQA,SAAgB,wBAAwB,CAAC,MAAmB;;IACxD,OAAO;QACH,mBAAmB,EAAE,MAAA,MAAM,CAAC,mBAAmB,mCAAI,IAAI;QACvD,gBAAgB,EAAE,MAAA,MAAM,CAAC,gBAAgB,mCAAI,IAAI;QACjD,iBAAiB,EAAE,MAAA,MAAM,CAAC,iBAAiB,mCAAI,IAAI;QACnD,kBAAkB,EAAE,MAAA,MAAM,CAAC,kBAAkB,mCAAI,IAAI;KACxD,CAAA;AACL,CAAC;AAPD,4DAOC;AASD,SAAgB,gBAAgB,CAAI,KAAe;IAC/C,IAAG,KAAK,KAAK,SAAS,EAAE;QACpB,OAAO,EAAE,CAAC;KACb;IAED,IAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACrB,OAAO,KAAK,CAAC;KAChB;IAED,OAAO,CAAC,KAAK,CAAC,CAAC;AACnB,CAAC;AAVD,4CAUC","sourcesContent":["import {TableBorder} from \"./TableCell\";\n\n/**\n * Return whether particular borders need to be included.\n * If the value is undefined then return true for that border.\n *\n * @param border the border item to parse.\n */\nexport function getDefaultBorderIncludes(border: TableBorder): TableBorder {\n    return {\n        includeBottomBorder: border.includeBottomBorder ?? true,\n        includeTopBorder: border.includeTopBorder ?? true,\n        includeLeftBorder: border.includeLeftBorder ?? true,\n        includeRightBorder: border.includeRightBorder ?? true,\n    }\n}\n\n/**\n * Transform a single item to an array (with one element).\n * Or return the array.\n *\n * @param items the item or items to transform to an array.\n * @return an array of items or an empty array.\n */\nexport function transformToArray<T>(items?: T | T[]): T[] {\n    if(items === undefined) {\n        return [];\n    }\n\n    if(Array.isArray(items)) {\n        return items;\n    }\n\n    return [items];\n}\n"]}